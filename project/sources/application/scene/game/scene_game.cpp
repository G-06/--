//*****************************************************************************
//
// scene game
//
// Author		: Kenji Kabutomori
//
//*****************************************************************************

//*****************************************************************************
// include
//*****************************************************************************
#include "scene_game.h"
#include "scene/factory/scene_factory.h"
#include "stage/stage_manager.h"

//=============================================================================
// constructor
//=============================================================================
SceneGame::SceneGame(void)
	:Scene(TYPE_GAME)
	,stage_manager_(nullptr)
{
}

//=============================================================================
// destructor
//=============================================================================
SceneGame::~SceneGame(void)
{
}

//=============================================================================
// initialize
//=============================================================================
bool SceneGame::Initialize(void)
{
	stage_manager_ = new StageManager();

	if(!SafeInitialize(stage_manager_))
	{
		return false;
	}

	return true;
}

//=============================================================================
// uninitialize
//=============================================================================
void SceneGame::Uninitialize(void)
{
	SafeRelease(stage_manager_);

	SafeDelete(next_scene_factory_);
}

//=============================================================================
// update
//=============================================================================
void SceneGame::Update(void)
{
	stage_manager_->Update();

	if(next_scene_factory_ == nullptr)
	{
		next_scene_factory_ = stage_manager_->__next_scene_factory();
	}
}

//=============================================================================
// draw
//=============================================================================
void SceneGame::Draw(void)
{
	stage_manager_->Draw();
}

//=============================================================================
// create factory
//=============================================================================
SceneFactory* SceneGame::CreateFactory(void)const
{
	return new GameFactory();
}

//---------------------------------- EOF --------------------------------------
