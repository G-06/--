//*****************************************************************************
//
// stage 6
//
// Author		: kitazawa taichi
//
//*****************************************************************************

//*****************************************************************************
// include
//*****************************************************************************
#include "stage_06.h"
#include "stage_factory.h"
#include "object/map.h"
#include "object/stage_offset.h"

//*****************************************************************************
// constant definition
//*****************************************************************************

//=============================================================================
// constructor
//=============================================================================
StageSix::StageSix(void)
	:NormalStage(TYPE_STAGE5)
{
}

//=============================================================================
// destructor
//=============================================================================
StageSix::~StageSix(void)
{
}

//=============================================================================
// initialize
//=============================================================================
bool StageSix::Initialize(void)
{
	NormalStage::Initialize();

	map_ = new Map();

	if(!SafeInitialize(map_))
	{
		return false;
	}

	map_->LoadFromFile("data/work/lenstest.bin");

	stage_offset_->__stage_size(map_->__size());

	LoadFromFile("data/work/lenstest.csv");

	return true;
}

//=============================================================================
// uninitialize
//=============================================================================
void StageSix::Uninitialize(void)
{
	NormalStage::Uninitialize();
}

//=============================================================================
// update
//=============================================================================
void StageSix::Update(void)
{
	NormalStage::Update();
}

//=============================================================================
// draw
//=============================================================================
void StageSix::Draw(void)
{
	NormalStage::Draw();
}

//=============================================================================
// create factory
//=============================================================================
StageFactory* StageSix::CreateFactory(void)const
{
	return new StageSixFactory();
}

//---------------------------------- EOF --------------------------------------
