//*****************************************************************************
//
// object start point
//
// Author		: Kenji Kabutomori
//
//*****************************************************************************

//*****************************************************************************
// include
//*****************************************************************************
#include "gimmick.h"
#include "render/sprite.h"
#include "system/system.h"

//*****************************************************************************
// constant definition
//*****************************************************************************

//=============================================================================
// constructor
//=============================================================================
Gimmick::Gimmick(TYPE type)
	:type_(type)
	,position_(0.0f,0.0f)
	,offset_position_(0.0f,0.0f)
{
}

//=============================================================================
// destructor
//=============================================================================
Gimmick::~Gimmick(void)
{
}

//=============================================================================
// initialize
//=============================================================================
bool Gimmick::Initialize(void)
{
	return true;
}

//=============================================================================
// uninitialize
//=============================================================================
void Gimmick::Uninitialize(void)
{
}

//=============================================================================
// update
//=============================================================================
void Gimmick::Update(void)
{
}

//=============================================================================
// draw
//=============================================================================
void Gimmick::Draw(void)
{
}

//---------------------------------- EOF --------------------------------------
