//*****************************************************************************
//
// effect check point
//
// Author		: Kenji Kabutomori
//
//*****************************************************************************

//*****************************************************************************
// include
//*****************************************************************************
#include "effect_check_point.h"
#include "render/sprite.h"

//*****************************************************************************
// constant definition
//*****************************************************************************

//=============================================================================
// constructor
//=============================================================================
EffectCheckPoint::EffectCheckPoint(void)
	:Effect(TYPE_CHECK_POINT)
	,sprite_(nullptr)
	,frame_count_(0)
{
}

//=============================================================================
// destructor
//=============================================================================
EffectCheckPoint::~EffectCheckPoint(void)
{
}

//=============================================================================
// initialize
//=============================================================================
bool EffectCheckPoint::Initialize(void)
{
	sprite_ = new Sprite();
	SafeInitialize(sprite_);
	sprite_->__point(Sprite::POINT_CENTER);
	sprite_->__size(D3DXVECTOR2(128.0f,64.0f));
	sprite_->__texture_id(Texture::TEXTURE_ID_GAME_STRING_CHECK_POINT);
	sprite_->SetParameter();

	return true;
}

//=============================================================================
// uninitialize
//=============================================================================
void EffectCheckPoint::Uninitialize(void)
{
	SafeRelease(sprite_);
}

//=============================================================================
// update
//=============================================================================
void EffectCheckPoint::Update(void)
{
	frame_count_++;

	if(frame_count_ > 60)
	{
		is_death_ = true;
	}
}

//=============================================================================
// draw
//=============================================================================
void EffectCheckPoint::Draw(void)
{
	sprite_->__position(position_ - offset_position_);
	sprite_->Draw();
}

//---------------------------------- EOF --------------------------------------
