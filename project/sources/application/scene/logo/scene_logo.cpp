//*****************************************************************************
//
// scene logo
//
// Author		: taichi kitazawa
//
//*****************************************************************************

//*****************************************************************************
// include
//*****************************************************************************
#include "scene_logo.h"
#include "logo.h"
#include "logo_bg.h"
#include "scene/factory/scene_factory.h"
#include "system/system.h"

//=============================================================================
// constructor
//=============================================================================
SceneLogo::SceneLogo(void)
	:Scene(TYPE_LOGO)
{
}

//=============================================================================
// destructor
//=============================================================================
SceneLogo::~SceneLogo(void)
{
}

//=============================================================================
// initialize
//=============================================================================
bool SceneLogo::Initialize(void)
{
	Logo_neko_ = new Logo;
	Logo_neko_ ->Initialize();

	Logo_bg_ = new LogoBg;
	Logo_bg_ ->Initialize();

	return true;
}

//=============================================================================
// uninitialize
//=============================================================================
void SceneLogo::Uninitialize(void)
{
	SafeRelease(Logo_neko_);
	SafeRelease(Logo_bg_);
	SafeDelete(next_scene_factory_);
	
}

//=============================================================================
// update
//=============================================================================
void SceneLogo::Update(void)
{
	Logo_neko_->Update();

	//タイトルに行くタイミングを見計らっている
	if(Logo_neko_->__next_scene_flag() == true)
	{
		if(next_scene_factory_ == nullptr)
		{
			next_scene_factory_ = new TitleFactory();
		}
	}
}
//=============================================================================
// draw
//=============================================================================
void SceneLogo::Draw(void)
{
	// draw stage
	Logo_bg_->Draw();
	Logo_neko_->Draw();
}

//=============================================================================
// create factory
//=============================================================================
SceneFactory* SceneLogo::CreateFactory(void)const
{
	return new LogoFactory();
}

//---------------------------------- EOF --------------------------------------
