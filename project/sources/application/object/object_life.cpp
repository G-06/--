//*****************************************************************************
//
// object_life
//
// Author	: masato masuda
//
//*****************************************************************************

//*****************************************************************************
// include
//*****************************************************************************
#include "object_life.h"
#include "render/sprite.h"
#include "system/system.h"

//*****************************************************************************
// constant definition
//*****************************************************************************
const D3DXVECTOR2 ObjectLife::LIFE_SIZE = D3DXVECTOR2(46.0f,38.0f);
const D3DXVECTOR2 ObjectLife::LIFE_POSITION = D3DXVECTOR2(0.0f,0.0f);

//=============================================================================
// constructor
//=============================================================================
ObjectLife::ObjectLife(void)
	: life_(nullptr)
	, is_life_(true)
	, size_(LIFE_SIZE)
{
}

//=============================================================================
// destructor
//=============================================================================
ObjectLife::~ObjectLife(void)
{
}

//=============================================================================
// initialize
//=============================================================================
bool ObjectLife::Initialize(void)
{
	life_ = new Sprite();
	life_->Initialize();
	life_->__point(Sprite::POINT_CENTER);
	life_->__size(LIFE_SIZE);
	life_->__texture_id(Texture::TEXTURE_ID_GAME_LIFE);
	life_->__left(0.0f);
	life_->__right(0.5f);
	life_->SetParameter();

	return true;
}

//=============================================================================
// uninitialize
//=============================================================================
void ObjectLife::Uninitialize(void)
{
	SafeRelease(life_);
}

//=============================================================================
// update
//=============================================================================
void ObjectLife::Update(void)
{
	if(is_life_)
	{
		life_->__left(0.0f);
		life_->__right(0.5f);
	}
	else
	{
		life_->__left(0.5f);
		life_->__right(1.0f);
	}
	life_->SetParameter();
}

//=============================================================================
// draw
//=============================================================================
void ObjectLife::Draw(void)
{
	life_->Draw();
}

//=============================================================================
// __position
//=============================================================================
void ObjectLife::__position(const D3DXVECTOR2 position)
{
	life_->__position(position);
	life_->SetParameter();
}

//=============================================================================
// __size
//=============================================================================
void ObjectLife::__size(const D3DXVECTOR2 size)
{
	life_->__size(size);
	life_->SetParameter();
}

//---------------------------------- EOF --------------------------------------
