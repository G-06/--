//*****************************************************************************
//
// stage
//
// Author		: Kenji Kabutomori
//
//*****************************************************************************

//*****************************************************************************
// include
//*****************************************************************************
#include"stage.h"
#include "render/sprite.h"
#include "system/system.h"

const D3DXVECTOR2 Stage::STAGE_SIZE = D3DXVECTOR2((f32)DEFAULT_SCREEN_WIDTH * 2.0f,(f32)DEFAULT_SCREEN_HEIGHT);

//=============================================================================
// constructor
//=============================================================================
Stage::Stage(void)
	:size_(STAGE_SIZE)
	,offset_position_(0.0f,0.0f)
	,bg_(nullptr)
{
}

//=============================================================================
// destructor
//=============================================================================
Stage::~Stage(void)
{
}

//=============================================================================
// initialize
//=============================================================================
bool Stage::Initialize(void)
{
	bg_ = new Sprite();

	if(!bg_->Initialize())
	{
		SafeRelease(bg_);
		return false;
	}

	bg_->__texture_id(Texture::TEXTURE_ID_STAGE_BG);
	bg_->__size(STAGE_SIZE);
	bg_->SetParameter();

	return true;
}

//=============================================================================
// uninitialize
//=============================================================================
void Stage::Uninitialize(void)
{
	SafeRelease(bg_);
}

//=============================================================================
// update
//=============================================================================
void Stage::Update(void)
{
	bg_->__position(D3DXVECTOR2(-offset_position_.x,-offset_position_.y));
}

//=============================================================================
// draw
//=============================================================================
void Stage::Draw(void)
{
	bg_->Draw();
}

//---------------------------------- EOF --------------------------------------
