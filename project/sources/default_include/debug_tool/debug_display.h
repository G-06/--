//*****************************************************************************
//
// debug display
//
// Author		: Kenji Kabutomori
//
//*****************************************************************************

//*****************************************************************************
// include gaurd
//*****************************************************************************
#pragma once

#ifndef _DEBUG_DISPLAY_H_
#define _DEBUG_DISPLAY_H_

//*****************************************************************************
// include
//*****************************************************************************
#include "basic/basic.h"

//*****************************************************************************
// macro definition
//*****************************************************************************

//*****************************************************************************
// constant definition
//*****************************************************************************

//*****************************************************************************
// ç\ë¢ëÃíËã`
//*****************************************************************************

//*****************************************************************************
// class definition
//*****************************************************************************
class DebugDisplay : public Basic
{
public:
	// constructor
	DebugDisplay(void);

	// destructor
	virtual ~DebugDisplay(void);

	// initializer
	bool Initialize(void);

	// uninitialize
	void Uninitialize(void);

	// update
	void Update(void);

	// draw
	void Draw(void);

	// print
	void Print(const char* pFormat,...);

	// accessor
	bool __is_show(void)const { return is_show_; }
	void __is_show(const bool& is_show) { is_show_ = is_show; }

private:
	static const u32 STRING_MAX = 1024;
	s8 string_[STRING_MAX];
	bool is_show_;
	LPD3DXFONT font_;
};

#endif // _DEBUG_DISPLAY_H_

//---------------------------------- EOF --------------------------------------
