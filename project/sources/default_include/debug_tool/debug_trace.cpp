//*****************************************************************************
//
// debug trace
//
// Author		: Kenji Kabutomori
//
//*****************************************************************************

//*****************************************************************************
// include
//*****************************************************************************
#include "debug_trace.h"

//*****************************************************************************
// macro definition
//*****************************************************************************

//*****************************************************************************
// constant definition
//*****************************************************************************

//*****************************************************************************
// グローバル変数
//*****************************************************************************

//=============================================================================
// constructor
//=============================================================================
DebugTrace::DebugTrace(void)
{
#ifdef _DEBUG
#endif
}

//=============================================================================
// destructor
//=============================================================================
DebugTrace::~DebugTrace(void)
{
#ifdef _DEBUG
#endif
}

//=============================================================================
// initialize
//=============================================================================
bool DebugTrace::Initialize(void)
{
#ifdef _DEBUG
#endif
	return true;
}

//=============================================================================
// uninitialize
//=============================================================================
void DebugTrace::Uninitialize(void)
{
#ifdef _DEBUG
#endif
}

//=============================================================================
// print
//=============================================================================
void DebugTrace::Print(const char* format,...)
{
#ifdef _DEBUG
	char work[STRING_MAX] = {NULL};
	va_list args;

	// 可変引数の参照開始
	va_start(args,format);

	// 文字列に変更
	vsprintf(work,format,args);

	// 可変引数の参照終了
	va_end(args);

	// print
	OutputDebugString(work);
#endif
}

//-----------------------------------EOF---------------------------------------
