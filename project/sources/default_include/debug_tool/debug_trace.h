//*****************************************************************************
//
// debug trace
//
// Author		: Kenji Kabutomori
//
//*****************************************************************************

//*****************************************************************************
// include gaurd
//*****************************************************************************
#pragma once
#ifndef _DEBUG_TRACE_H_
#define _DEBUG_TRACE_H_

//*****************************************************************************
// include
//*****************************************************************************
#include "basic/basic.h"

//*****************************************************************************
// macro definition
//*****************************************************************************

//*****************************************************************************
// constant definition
//*****************************************************************************

//*****************************************************************************
// ç\ë¢ëÃíËã`
//*****************************************************************************

//*****************************************************************************
// class definition
//*****************************************************************************
class DebugTrace : public Basic
{
public:
	// constructor
	DebugTrace(void);

	// destructor
	virtual ~DebugTrace(void);

	// initialize
	bool Initialize(void);

	// uninitialize
	void Uninitialize(void);

	// print
	void Print(const s8* format,...);
private:
	static const u32 STRING_MAX = 1024;
};

#endif // _DEBUG_TRACE_H_

//---------------------------------- EOF --------------------------------------
